|traffic_controller
clk_fpga => pres_state.YELLOW_RED.CLK
clk_fpga => pres_state.GREEN.CLK
clk_fpga => pres_state.RED_YELLOW.CLK
clk_fpga => pres_state.RED.CLK
clk_fpga => pres_state.rst.CLK
clk_fpga => pres_state.ovride.CLK
clk_fpga => clk_1Hz.CLK
clk_fpga => \create_1Hz_clk:cnt[0].CLK
clk_fpga => \create_1Hz_clk:cnt[1].CLK
clk_fpga => \create_1Hz_clk:cnt[2].CLK
clk_fpga => \create_1Hz_clk:cnt[3].CLK
clk_fpga => \create_1Hz_clk:cnt[4].CLK
clk_fpga => \create_1Hz_clk:cnt[5].CLK
clk_fpga => \create_1Hz_clk:cnt[6].CLK
clk_fpga => \create_1Hz_clk:cnt[7].CLK
clk_fpga => \create_1Hz_clk:cnt[8].CLK
clk_fpga => \create_1Hz_clk:cnt[9].CLK
clk_fpga => \create_1Hz_clk:cnt[10].CLK
clk_fpga => \create_1Hz_clk:cnt[11].CLK
clk_fpga => \create_1Hz_clk:cnt[12].CLK
clk_fpga => \create_1Hz_clk:cnt[13].CLK
clk_fpga => \create_1Hz_clk:cnt[14].CLK
clk_fpga => \create_1Hz_clk:cnt[15].CLK
clk_fpga => \create_1Hz_clk:cnt[16].CLK
clk_fpga => \create_1Hz_clk:cnt[17].CLK
clk_fpga => \create_1Hz_clk:cnt[18].CLK
clk_fpga => \create_1Hz_clk:cnt[19].CLK
clk_fpga => \create_1Hz_clk:cnt[20].CLK
clk_fpga => \create_1Hz_clk:cnt[21].CLK
clk_fpga => \create_1Hz_clk:cnt[22].CLK
clk_fpga => \create_1Hz_clk:cnt[23].CLK
clk_fpga => \create_1Hz_clk:cnt[24].CLK
clk_fpga => \create_1Hz_clk:cnt[25].CLK
reset => next_state.ovride.IN0
reset => \state_transition_logic:cnt[3].IN0
reset => pres_state.RED.IN0
reset => pres_state.ovride.IN0
reset => clk_1Hz.OUTPUTSELECT
reset => \create_1Hz_clk:cnt[25].IN0
override => next_state.ovride.IN1
override => pres_state.ovride.IN1
override => next_state.rst.ACLR
override => next_state.ovride.PRESET
override => \state_transition_logic:cnt[3].IN1
override => pres_state.RED.IN1
override => pres_state.rst.ACLR
override => pres_state.ovride.PRESET
override => \create_1Hz_clk:cnt[25].IN1
override => clk_1Hz.ENA
hex0[0] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
hex0[1] <= <VCC>
hex0[2] <= <VCC>
hex0[3] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
hex0[4] <= <VCC>
hex0[5] <= <VCC>
hex0[6] <= hex0.DB_MAX_OUTPUT_PORT_TYPE


